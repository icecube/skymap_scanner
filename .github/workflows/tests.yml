name: tests

on: [push]

env:
  PY_COLORS: "1"
  # SKYSCAN_TEST_EVENT: test_event_01
  # SKYSCAN_TEST_EVENT_PATH: /mnt/test_event_01.i3
  PULSAR_CONTAINER: pulsar_local
  SKYSCAN_CONTAINER: skyscan-cloud
  # SKYSCAN_EVENT: ./tests/docker_scripts/event_HESE_2017-11-28.json
  SKYSCAN_CACHE_DIR: cache-dir
  # SKYSCAN_EVENT: ic191001a_sim.i3
  SKYSCAN_EVENT_PKL: ./tests/data/skyscan_data/realtime_events/-243122034428012599.pkl
  SKYSCAN_GCD_DIR: /cvmfs/icecube.opensciencegrid.org/users/RealTime/GCD/PoleBaseGCDs/
  PULSAR_ADDRESS: localhost:6650
  PULSAR_AUTH: ""

jobs:

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker Image
        run: |
          ./tests/docker_scripts/docker_build.sh $SKYSCAN_CONTAINER

  test-run-all:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cvmfs-contrib/github-action-cvmfs@v2
        with:
          cvmfs_backoff_init: 2
          cvmfs_max_retries: 3
          cvmfs_dns_retries: 3
      - name: Test CernVM-FS
        run: ls $SKYSCAN_GCD_DIR
      - name: Run Pulsar Server Docker Container (starts up during skymap scanner image build)
        run: |
          ./tests/docker_scripts/pulsar_run.sh $PULSAR_CONTAINER
      - name: Build Skymap Scanner Docker Image
        run: |
          ./tests/docker_scripts/docker_build.sh $SKYSCAN_CONTAINER
      - name: Configure Pulsar Server
        run: |
          ./tests/docker_scripts/pulsar_config.sh $PULSAR_CONTAINER
      - name: Run
        run: |
          # Based on cloud_tools README.md (with collector+saver merged into server)
          ./tests/docker_scripts/launch_server.sh $SKYSCAN_CONTAINER &
          ./tests/docker_scripts/launch_client.sh $SKYSCAN_CONTAINER &
          wait -n
          SERVER_RET=$?
          wait -n
          CLIENT_RET=$?
      - name: Check Jobs
        run: |
          echo "Server: exit code $SERVER_RET"
          echo "Client: exit code $CLIENT_RET"
          for ret in $SERVER_RET $CLIENT_RET ; do
            if [ $ret -ne 0 ]; then
              exit $ret
            fi
          done
      # - name: Test Output
      #   run: |
      #     # docker run --rm -v $PWD:/mnt -i icecube/icetray:combo-stable-prod dataio-shovel -l millipede /mnt/test_event_01.i3

  test-run-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cvmfs-contrib/github-action-cvmfs@v2
        with:
          cvmfs_backoff_init: 2
          cvmfs_max_retries: 3
          cvmfs_dns_retries: 3
      - name: Test CernVM-FS
        run: ls $SKYSCAN_GCD_DIR
      - name: Run Pulsar Server Docker Container (starts up during skymap scanner image build)
        run: |
          ./tests/docker_scripts/pulsar_run.sh $PULSAR_CONTAINER
      - name: Build Skymap Scanner Docker Image
        run: |
          ./tests/docker_scripts/docker_build.sh $SKYSCAN_CONTAINER
      - name: Configure Pulsar Server
        run: |
          ./tests/docker_scripts/pulsar_config.sh $PULSAR_CONTAINER
      - name: Run
        run: |
          ./tests/docker_scripts/launch_server.sh $SKYSCAN_CONTAINER
      # - name: Test Output
      #   run: |

  test-run-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cvmfs-contrib/github-action-cvmfs@v2
        with:
          cvmfs_backoff_init: 2
          cvmfs_max_retries: 3
          cvmfs_dns_retries: 3
      - name: Test CernVM-FS
        run: ls $SKYSCAN_GCD_DIR
      - name: Run Pulsar Server Docker Container (starts up during skymap scanner image build)
        run: |
          ./tests/docker_scripts/pulsar_run.sh $PULSAR_CONTAINER
      - name: Build Skymap Scanner Docker Image
        run: |
          ./tests/docker_scripts/docker_build.sh $SKYSCAN_CONTAINER
      - name: Configure Pulsar Server
        run: |
          ./tests/docker_scripts/pulsar_config.sh $PULSAR_CONTAINER
      - name: Run
        run: |
          ./tests/docker_scripts/launch_client.sh $SKYSCAN_CONTAINER
      # - name: Test Output
      #   run: |


  test-run-client-scanner:
    runs-on: ubuntu-latest
    env:
      SKYSCAN_CLIENT_SCANNER_FILES_DIR: ./tests/data/client_scanner
      SKYSCAN_CLIENT_SCANNER_IN_FILENAME: in.pkl
      SKYSCAN_CLIENT_SCANNER_OUT_FILENAME: out.pkl
    steps:
      - uses: actions/checkout@v3
      - uses: cvmfs-contrib/github-action-cvmfs@v2
        with:
          cvmfs_backoff_init: 2
          cvmfs_max_retries: 3
          cvmfs_dns_retries: 3
      - name: Test CernVM-FS
        run: ls $SKYSCAN_GCD_DIR
      - name: Build Skymap Scanner Docker Image
        run: |
          ./tests/docker_scripts/docker_build.sh $SKYSCAN_CONTAINER
      - name: Run
        run: |
          ./tests/docker_scripts/_launch_client_scanner.sh $SKYSCAN_CONTAINER
      # - name: Test Output
      #   run: |
